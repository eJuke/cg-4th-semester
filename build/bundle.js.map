{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 296ac69fbf1d5049f339","webpack:///app/index.js","webpack:///","webpack:///./style/main.scss","webpack:///app/lab-code/lab1.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://ejuke.github.io/cg-7th-semester/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 296ac69fbf1d5049f339\n **/","//styles\r\nimport './style/main.scss';\r\n//js\r\n\r\n// import '../node_modules/react/dist/react.min.js';\r\n// import '../node_modules/react-dom/dist/react-dom.min.js';\r\n\r\nvar rootElementId = 'root',\r\n\t\tLab1 = require ('./lab-code/lab1.js'),\r\n\t\tlab1 = new Lab1(rootElementId);\r\n\r\nvar cpath = (window.location.toString() == 'https://ejuke.github.io/cg-7th-semester/') ? window.location.toString() : '/';\r\n\r\ndocument.body.onload = function(e){\r\n\tlab1.prepare();\r\n\r\n\tlab1.readShader(cpath+'app/shaders/lab1.frag');\r\n\tlab1.readShader(cpath+'app/shaders/lab1.vert');\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** app/index.js\n **/","undefined\n\n\n/** WEBPACK FOOTER **\n ** \n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./style/main.scss\n ** module id = 1\n ** module chunks = 0\n **/","function lab1 (id) {\r\n\t//init components\r\n\tthis.rootId = id;\r\n\tthis.webgl = null;\r\n\tthis.canvas = null;\r\n\tthis.VSHADER_SOURCE = this.FSHADER_SOURCE = null;\r\n\tthis.VSHADER = this.FSHADER = null;\r\n\r\n\t//data\r\n\tthis.pMatrix = mat4.create(), this.mvMatrix = mat4.create();\r\n}\r\n\r\n/*Чтение шейдеров*/\r\nlab1.prototype.readShader = function(filePath){\r\n\tvar shaderType = null;\r\n\tvar thisObject = this;\r\n\tif (filePath.search('.frag') != -1) shaderType = 'fragment';\r\n\tif (filePath.search('.vert') != -1) shaderType = 'vertex';\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.onreadystatechange = function(){\r\n\t\tif (request.readyState === 4 && request.status !== 404) { \r\n\t\t\tthisObject.onReadShader(request.responseText, shaderType);\r\n\t\t}\r\n\t}\r\n\trequest.open('GET', filePath, true);\r\n\trequest.send();\r\n}\r\n\r\n/*Инициализация шейдеров после чтения*/\r\nlab1.prototype.onReadShader = function(fileString, shaderType){\r\n\tif (shaderType == 'vertex'){\r\n\t\tthis.VSHADER_SOURCE = fileString;\r\n\t\tthis.VSHADER = this.compileShaders(this.webgl, this.VSHADER_SOURCE, this.webgl.VERTEX_SHADER);\r\n\t}\r\n\telse if (shaderType == 'fragment'){\r\n\t\tthis.FSHADER_SOURCE = fileString;\r\n\t\tthis.FSHADER = this.compileShaders(this.webgl, this.FSHADER_SOURCE, this.webgl.FRAGMENT_SHADER);\r\n\t}\r\n\telse return null;\r\n\tif (this.VSHADER_SOURCE && this.FSHADER_SOURCE) {\r\n\t\tconsole.info('Shaders loaded');\r\n\t\tthis.execute();\r\n\t}\r\n}\r\n\r\n/*Компиляция шейдеров*/\r\nlab1.prototype.compileShaders = function(gl, shaderSrc, shaderType){\r\n\tvar shader = gl.createShader(shaderType);\r\n\tgl.shaderSource(shader, shaderSrc);\r\n\tgl.compileShader(shader);\r\n\r\n\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n\t\tconsole.error(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(shader));\r\n\t\treturn null;\r\n\t}\r\n\telse console.info('Shader compiled successful.');\r\n\treturn shader;\r\n}\r\n\r\n/*Подготовка документа к исполнению кода*/\r\nlab1.prototype.prepare = function(){\r\n\tvar rootEl = document.getElementById(this.rootId);\r\n\trootEl.innerHTML = '<canvas id=\"lab1\" width=\"600px\" height=\"600px\"></canvas>';\r\n\tthis.canvas = document.getElementById('lab1');\r\n\tvar names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n\tfor (var ii = 0; ii < names.length; ++ii) {\r\n\t\ttry {\r\n\t\t\tthis.webgl = this.canvas.getContext(names[ii]);\r\n\t\t} catch(e) {}\r\n\t\tif (this.webgl) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar inputX = document.createElement('input');\r\n\tvar inputY = document.createElement('input');\r\n\tvar inputZ = document.createElement('input');\r\n\tvar labelX = document.createElement('label');\r\n\tvar labelY = document.createElement('label');\r\n\tvar labelZ = document.createElement('label');\r\n\r\n\tinputX.type = \"number\";\r\n\tinputY.type = \"number\";\r\n\tinputZ.type = \"number\";\r\n\tinputX.id = \"angleX\";\r\n\tinputY.id = \"angleY\";\r\n\tinputZ.id = \"angleZ\";\r\n\tinputX.className = \"angle-input\";\r\n\tinputY.className = \"angle-input\";\r\n\tinputZ.className = \"angle-input\";\r\n\r\n\tlabelX.innerHTML = \"<br><br>угол по оси X:  \";\r\n\tlabelY.innerHTML = \"<br><br>угол по оси Y:  \";\r\n\tlabelZ.innerHTML = \"<br><br>угол по оси Z:  \";\r\n\r\n\trootEl.appendChild(labelX);\r\n\trootEl.appendChild(inputX);\r\n\trootEl.appendChild(labelY);\r\n\trootEl.appendChild(inputY);\r\n\trootEl.appendChild(labelZ);\r\n\trootEl.appendChild(inputZ);\r\n}\r\n\r\n/*Инициализация шейдеров*/\r\nlab1.prototype.initShaders = function(gl){\r\n\tthis.shaderProgram = gl.createProgram();\r\n\tgl.attachShader(this.shaderProgram, this.VSHADER);\r\n\tgl.attachShader(this.shaderProgram, this.FSHADER);\r\n\tgl.linkProgram(this.shaderProgram);\r\n\r\n\tif(!gl.getProgramParameter(this.shaderProgram, gl.LINK_STATUS)){\r\n\t\tconsole.error('Unable to initialize the shader program.');\r\n\t}\r\n\r\n\tgl.useProgram(this.shaderProgram);\r\n\r\n\tthis.shaderProgram.vertexPositionAttribute = gl.getAttribLocation(this.shaderProgram, \"aVertexPosition\");\r\n\tgl.enableVertexAttribArray(this.shaderProgram.vertexPositionAttribute);\r\n\r\n\tthis.shaderProgram.pMatrixUniform = gl.getUniformLocation(this.shaderProgram, \"uPMatrix\");\r\n\tthis.shaderProgram.mvMatrixUniform = gl.getUniformLocation(this.shaderProgram, \"uMVMatrix\");\r\n}\r\n\r\n/*Собственно, отрисовка контекста*/\r\nlab1.prototype.execute = function(){\r\n\tif (this.webgl) console.info('WebGL init successful');\r\n\telse {\r\n\t\tconsole.error('WebGL not initialized');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tthis.webgl.viewportWidth = this.canvas.width;\r\n\tthis.webgl.viewportHeight = this.canvas.height;\r\n\t// установить в качестве цвета очистки буфера цвета черный, полная непрозрачность\r\n\tthis.webgl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\t// включает использование буфера глубины\r\n\tthis.webgl.enable(this.webgl.DEPTH_TEST);\r\n\t// определяет работу буфера глубины: более ближние объекты перекрывают дальние\r\n\tthis.webgl.depthFunc(this.webgl.LEQUAL);\r\n\tthis.webgl.clear(this.webgl.COLOR_BUFFER_BIT|this.webgl.DEPTH_BUFFER_BIT);  \r\n\r\n\tthis.initShaders(this.webgl);\r\n\r\n\tthis.horizAspect = this.webgl.viewportHeight / this.webgl.viewportWidth;\r\n\tthis.initBuffers(this.webgl);\r\n\tthis.drawScene(this.webgl);\r\n}\r\n\r\n/*Инициализация буфера*/\r\nlab1.prototype.initBuffers = function(gl){\r\n\tthis.squareVerticlesBuffer = gl.createBuffer();\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, this.squareVerticlesBuffer);\r\n\tthis.verticles = [\r\n\t\t 1.0,  1.0,  0.0,\r\n\t\t-1.0,  1.0,  0.0,\r\n\t\t 1.0, -1.0,  0.0,\r\n\t\t-1.0, -1.0,  0.0\r\n\t];\r\n\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.verticles), gl.STATIC_DRAW);\r\n\tthis.squareVerticlesBuffer.itemSize = 3;\r\n\tthis.squareVerticlesBuffer.numItems = 4;\r\n}\r\n\r\n/*Отрисовка сцены*/\r\nlab1.prototype.drawScene = function(gl){\r\n\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\tgl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\r\n\r\n\tmat4.perspective(45, this.horizAspect, 0.1, 100.0, this.pMatrix);\r\n\t//создаем матрицу текущего состояния (изначально - единичная) model-view matrix\r\n\tmat4.identity(this.mvMatrix);\r\n\tmat4.translate(this.mvMatrix, [0.0, 0.0, -7.0]);\r\n\tgl.bindBuffer(gl.ARRAY_BUFFER, this.squareVerticlesBuffer);\r\n\tgl.vertexAttribPointer(this.shaderProgram.vertexPositionAttribute, this.squareVerticlesBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n\r\n\tthis.setMatrixUniforms(this.webgl);\r\n\tthis.webgl.drawArrays(this.webgl.TRIANGLE_STRIP, 0, this.squareVerticlesBuffer.numItems);\r\n}\r\n\r\n/*Перенос изменений матриц в видеокарту*/\r\nlab1.prototype.setMatrixUniforms = function(gl) {\r\n\tgl.uniformMatrix4fv(this.shaderProgram.pMatrixUniform, false, this.pMatrix);\r\n\tgl.uniformMatrix4fv(this.shaderProgram.mvMatrixUniform, false, this.mvMatrix);\r\n}\r\n\r\n/*Экспорт модуля*/\r\nmodule.exports = lab1;\n\n\n/** WEBPACK FOOTER **\n ** app/lab-code/lab1.js\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;ACAA;AACA;AACA;ADEA;AACA;ACCA;AACA;AACA;AACA;AACA;AAEA;;;;;;ACnBA;;;;;;;;ACAA;AFCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}